https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

class Solution {
public:
    
    //leftidx and rightidx index combined together
    int index(vector<int>& nums, int target, bool left=true){
        int low=0,high=nums.size()-1;
        int ans=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(nums[mid]==target){
                if(left){
                    ans=mid;
                    high=mid-1;    
                }else{
                    ans=mid;
                    low=mid+1;
                }                
            }else if(nums[mid]>target){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
    /*
    int leftidx(vector<int>& nums, int target){
        int low=0,high=nums.size()-1;
        int ans=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(nums[mid]==target){
                ans=mid;
                high=mid-1;
            }else if(nums[mid]>target){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }
    
    int rightidx(vector<int>& nums, int target){
        int low=0,high=nums.size()-1;
        int ans=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(nums[mid]==target){
                ans=mid;
                low=mid+1;
            }else if(nums[mid]>target){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return ans;
    }*/
    
    vector<int> searchRange(vector<int>& nums, int target) {
        int left=index(nums,target,true);
        int right=index(nums,target,false);
        
        return {left,right};
    }
    
    //starting....
    //1 2 2 3 5 5 5 5 7
    //f f f f t t t t f for right => last true (greater than or equal to target=5)
    //t t t t f f f f f for left => first false (less than or equal to target=5)
    //actually dont need here if we use a variable for current target==nums[mid] for each case
    //and then wtiting individual condition
    
};
